@startuml
' Define packages to organize the structure
package "Backend Entities" {
  ' Auth-related classes
  class UserCreationInfo {
    +nombre: string
    +contrasena: string
    +correo: string
    +telefono: number
    +identificacion: string
    +nombre_tipo_identificacion: string
  }

  class LogInInfo {
    +identificacion: string
    +contrasena: string
  }

  class UserInfo {
    +id_persona: string
    +nombre: string
    +correo: string
    +telefono: number
    +identificacion: string
    +nombre_tipo_identificacion: string
    +nombre_rol: UserRol
  }

  class UserSelectionInfo {
    +id_persona: string
    +nombre: string
    +correo: string
    +telefono: number
    +identificacion: string
    +nombre_tipo_identificacion: string
    +nombre_rol: UserRol
    +matricula_valida: boolean
  }

  class UserUpdationInfo {
    +nombre: string
    +correo: string
    +telefono: number
    +identificacion: string
    +nombre_tipo_identificacion: string
  }

  enum UserRol {
    Usuario
    Admin
    Entrenador
  }

  ' Tournament-related classes
  class Tournament {
    +id_torneo: string
    +nombre: string
  }

  class UserTournamentInfo {
    +id_torneo: string
    +nombre: string
    +puesto: number
  }

  class UserTournamentRegistration {
    +nombre: string
    +id_persona: string
    +id_torneo: string
    +puesto: number
  }

  ' Training-related classes
  class Training {
    +id_entrenamiento: string
    +tiempo_minutos: number
    +nombre_entrenamiento: string
  }

  class TrainingRegistration {
    +id_entrenamiento: string
    +id_persona: string
  }

  class TrainingInfo {
    +tiempo_minutos: number
    +nombre_entrenamiento: string
  }

  ' Tuition-related classes
  class Tuition {
    +id_persona: string
    +monto_usd: number
    +fecha_inscripccion: string
  }

  class TuitionInfo {
    +id_persona: string
    +monto_usd: number
  }

  ' Request-related classes
  class RequestCommand {
    +requester_id: string
    +request_id: string
    +command_name: string
    +command_content: RequestContent
    +aprover_id: string
    +completed: boolean
  }

  interface RequestContent {
    +type: CommandType
  }

  class UserUpdateRequest {
    +user_updation: UserUpdationInfo
    +user_id: string
  }

  class DeleteTournamentRequest {
    +tournament_id: string
  }

  class DeleteTrainingRequest {
    +training_id: string
  }

  enum CommandType {
    UpdateUser
    DeleteTournament
    DeleteTraining
  }
}

package "Components" {
  class InputComponent {
    +onChange: (value: string) => void
    +name: string
    +validator: Validator | Validator[]
    +placeholder: string
    +type: HTMLInputTypeAttribute
    +defaultValue: string
    +className: string
    +disabled: boolean
  }

  class NavBarComponent {
  }

  class NavBarDashboard {
    +links: LinkData[]
  }

  class PaymentComponent {
    +onPaymentSuccess: () => void
  }

  class RequestComponent {
    +request: RequestCommand
  }

  class RequestContentVisualizer {
    +requestContent: RequestContent
  }

  class UserForm {
    +onSuccessfulSend: (userCreationInfo: UserCreationInfo) => void
    +initialData: UserCreationInfo
    +buttonName: string
    +showPasswordFields: boolean
    +exemptValues: ExistanceValues
  }

  class UserInfoComponent {
    +userInfo: UserInfo
    +className: string
  }

  class UserRoleManagement {
    +userInfo: UserInfo
  }

  class UserSelectionComponent {
    +onChangeUser: (user_id: string) => void
  }
}

package "Utilities" {
  class LinkData {
    +linkText: string
    +to: string
    +icon: ReactNode
  }

  class ExistanceValues {
    +email: string
    +phone: string
  }
}

' Define relationships for Backend Entities
UserInfo "1" -- "1" UserRol : has >
UserSelectionInfo "1" -- "1" UserRol : has >
RequestCommand "1" -- "1" RequestContent : contains >
UserUpdateRequest "1" -- "1" UserUpdationInfo : contains >
UserTournamentRegistration "1" -- "1" Tournament : registers for >
UserTournamentRegistration "1" -- "1" UserInfo : registers >
TrainingRegistration "1" -- "1" Training : registers for >
TrainingRegistration "1" -- "1" UserInfo : registers >
Tuition "1" -- "1" UserInfo : belongs to >
TuitionInfo "1" -- "1" UserInfo : belongs to >
UserUpdateRequest --|> RequestContent : implements
DeleteTournamentRequest --|> RequestContent : implements
DeleteTrainingRequest --|> RequestContent : implements

' Define relationships for Components
InputComponent "1" -- "0..*" Validator : uses >
UserForm "1" -- "1" UserCreationInfo : uses >
RequestComponent "1" -- "1" RequestCommand : uses >
RequestContentVisualizer "1" -- "1" RequestContent : visualizes >
UserInfoComponent "1" -- "1" UserInfo : displays >
UserRoleManagement "1" -- "1" UserInfo : manages >
UserSelectionComponent "1" -- "0..*" UserSelectionInfo : selects >
NavBarDashboard "1" -- "0..*" LinkData : contains >
UserForm "1" -- "0..1" ExistanceValues : exempts >

' Additional inferred relationships from code usage
PaymentComponent "1" -- "1" TuitionInfo : creates >
RequestComponent "1" -- "0..1" UserInfo : requester >
RequestComponent "1" -- "0..1" UserInfo : approver >
UserRoleManagement "1" -- "1" UserRol : updates >

@enduml